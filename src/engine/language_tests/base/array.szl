# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

a: array of int = { 1, 2 };
for (i: int = 0; i < len(a); i++)
  assert(a[i] == i + 1);

aa: array of array of int = { { 11, 22 }, { 33, 44 } };
for (i: int = 0; i < len(aa); i++)
  for(j: int = 0; j < len(aa[i]); j++)
    assert(aa[i][j] == 11 * (1 + 2 * i + j));

aaa: array of array of array of int = {
  { { 111, 222, 333, 444 }, { 555, 666, 777, 888 } },
  { { 1111, 2222, 3333, 4444 }, { 5555, 6666, 7777, 8888 } },
  { { 11111, 22222, 33333, 44444 }, { 55555, 66666, 77777, 88888 } }
};
for(i: int = 0; i < len(aaa); i++)
  for(j: int = 0; j < len(aaa[i]); j++)
    for(k: int = 0; k < len(aaa[i][j]); k++)
      assert(aaa[i][j][k] == aaa[i][0][0] * (1 + 4 * j + k));

aaaa: array of array of array of array of int = {
  {
    { { 111111, 222222, 333333, 444444 }, { 555555, 666666, 777777, 888888 } },
    { { 11111111, 22222222, 33333333, 44444444 },
      { 55555555, 66666666, 77777777, 88888888 } },
    { { 1111111111, 2222222222, 3333333333, 4444444444 },
      { 5555555555, 6666666666, 7777777777, 8888888888 } }
  }, {
    { { 111111111,222222222, 333333333, 444444444 },
      { 555555555, 666666666, 777777777, 888888888 } },
    { { 111111111111, 222222222222, 333333333333, 444444444444 },
      { 555555555555, 666666666666, 777777777777, 888888888888 } },
    { { 111111111111111, 222222222222222, 333333333333333, 444444444444444 },
      { 555555555555555, 666666666666666, 777777777777777, 888888888888888 } }
  }
};
for (i: int = 0; i < len(aaaa); i++)
  for (j: int = 0; j < len(aaaa[i]); j++)
    for (k: int = 0; k < len(aaaa[i][j]); k++)
      for (l: int = 0; l < len(aaaa[i][j][k]); l++)
        assert(aaaa[i][j][k][l] == aaaa[i][j][0][0] * (1 + 4 * k + l));
