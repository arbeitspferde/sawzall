# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#
# test that garbage collection is working
#
# Requires "--memory_limit=400" and input file <testname>.in

# A variant of the "wc" example that allocates enough memory on each record
# to force garbage collection.  Tests that outputters are not affected by
# the pointer adjustment done on stack entries.

nlines: table sum of int;  # Lines
nwords: table sum of int;  # White-space separated tokens
nchars: table sum of int;  # Unicode characters
nbytes: table sum of int;  # Raw bytes

# Start with 200 bytes and grow to 200 * 2^20 = 200M bytes, requiring
# at least 400M bytes to run without GC (for all copies).
# The memory limit should be set at or below 400MB to force GC.

s: string = new(string, 200, 'x');
for (i: int = 0; i < 20; i++)
  s = s + s;

emit nlines <- 1;
emit nwords <- len(sawzall(string(input), "[^ \t]+"));
emit nchars <- len(string(input));
emit nbytes <- len(input);

r: resourcestats = getresourcestats();
if (r.allocatedmem < (300 << 20))
  emit stderr <- format("Too little memory allocated: %d", r.allocatedmem);
if (r.allocatedmem > (420 << 20))
  emit stderr <- format("Too much memory allocated: %d", r.allocatedmem);
