# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#
# impure function results are not allowed
#
type badtype0 = function (x: int): function();

#
# results containing impure functions are not allowed either
#
type badtype1 = function (x: int): array of function();
type badtype2 = function (x: int): map [int] of function();
type badtype3 = function (x: int): map [function(x: int)] of string;
type badtype4 = function (x: int): { f: function() };
type badtype5 = function (x: int): array of { f: function() };

#
# assignment of values containing impure functions is not allowed
# when the lvalue is in a scope enclosing the rvalue's scope
#

badassign1: array of function();
badassign2: map[int] of function();
badassign3: map[function()] of string;
badassign4: { f: function() };
badassign5: array of { f: function() };
badassign: function() {
  g: function() { };
  badassign1 = { g };
  badassign2 = {0:g};
  badassign3 = {g:""};
  badassign4 = { g };
  badassign5 = { { g } };
};


#
# prerequisites
#
type ftype = function (x: int): int;
type gtype = ftype;

#
# various illegal ways to define functions
#
static f1: function(x: int): int = 0;

f2: int = ftype {};

#
# legal assignment
#
global: function();
f3: function() {
  global = f3;
};

# a couple of illegal forms.
x := function();
y := function() = function() { };


# Syntactically incorrect function call.
undeclared_fun()
syntax_error;

misdeclared_fun: int;
misdeclared_fun()
syntax_error;
