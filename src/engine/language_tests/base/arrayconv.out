l1: bool = false;
l2: bool = true;
l3: bool = true;
l4: bool = false;
b1: bytes = B"abcdefgh";
b2: bytes = B"ijklmnop";
b3: bytes = B"qrstuvwx";
b4: bytes = B"yzabcdef";
p1: fingerprint = 0x00000000499602d2P;
p2: fingerprint = 0x000000008bd03835P;
p3: fingerprint = 0x00000000ce0a6a14P;
p4: fingerprint = 0x00000001104478cbP;
f1: float = 1.1;
f2: float = 2.3;
f3: float = 3.5;
f4: float = 4.7;
i1: int = 5678901234;
i2: int = 6789012345;
i3: int = 7890123456;
i4: int = 8901234567;
s1: string = "abc";
s2: string = "def";
s3: string = "ghi";
s4: string = "jkl";
t1: time = convert(time, 9876543210);
t2: time = convert(time, 8765432109);
t3: time = convert(time, 7654321098);
t4: time = convert(time, 6543210987);
u1: uint = 5432109876U;
u2: uint = 4321098765U;
u3: uint = 3210987654U;
u4: uint = 2109876543U;
sl1: string = "F";
sl2: string = "T";
sl3: string = "T";
sl4: string = "F";
sb1: string = s1;
sb2: string = s2;
sb3: string = s3;
sb4: string = s4;
sp1: string = "1234567890";
sp2: string = "2345678901";
sp3: string = "3456789012";
sp4: string = "4567890123";
sf1: string = "1.1";
sf2: string = "2.3";
sf3: string = "3.5";
sf4: string = "4.7";
si1: string = "5678901234";
si2: string = "6789012345";
si3: string = "7890123456";
si4: string = "8901234567";
st1: string = "Mar  4 15:25:48 PST 2009";
st2: string = "Mar  5 15:25:48 PST 2009";
st3: string = "Mar  6 15:25:48 PST 2009";
st4: string = "Mar  7 15:25:48 PST 2009";
su1: string = "5432109876";
su2: string = "4321098765";
su3: string = "3210987654";
su4: string = "2109876543";
arr_il: array of int = convert(array of int, {l1, l2, l3});
assert(len(arr_il) == 3);
assert(arr_il[0] == convert(int, l1));
assert(arr_il[1] == convert(int, l2));
assert(arr_il[2] == convert(int, l3));
arr_sl: array of string = convert(array of string, {l1, l2, l3});
assert(len(arr_sl) == 3);
assert(arr_sl[0] == convert(string, l1));
assert(arr_sl[1] == convert(string, l2));
assert(arr_sl[2] == convert(string, l3));
arr_ul: array of uint = convert(array of uint, {l1, l2, l3});
assert(len(arr_ul) == 3);
assert(arr_ul[0] == convert(uint, l1));
assert(arr_ul[1] == convert(uint, l2));
assert(arr_ul[2] == convert(uint, l3));
arr_pb: array of fingerprint = convert(array of fingerprint, {b1, b2, b3});
assert(len(arr_pb) == 3);
assert(arr_pb[0] == convert(fingerprint, b1));
assert(arr_pb[1] == convert(fingerprint, b2));
assert(arr_pb[2] == convert(fingerprint, b3));
arr_ib: array of int = convert(array of int, {b1, b2, b3}, "szl");
assert(len(arr_ib) == 3);
assert(arr_ib[0] == convert(int, b1, "szl"));
assert(arr_ib[1] == convert(int, b2, "szl"));
assert(arr_ib[2] == convert(int, b3, "szl"));
arr_sb: array of string = convert(array of string, {b1, b2, b3});
assert(len(arr_sb) == 3);
assert(arr_sb[0] == convert(string, b1));
assert(arr_sb[1] == convert(string, b2));
assert(arr_sb[2] == convert(string, b3));
arr_ub: array of uint = convert(array of uint, {b1, b2, b3}, "szl");
assert(len(arr_ub) == 3);
assert(arr_ub[0] == convert(uint, b1, "szl"));
assert(arr_ub[1] == convert(uint, b2, "szl"));
assert(arr_ub[2] == convert(uint, b3, "szl"));
arr_bp: array of bytes = convert(array of bytes, {p1, p2, p3});
assert(len(arr_bp) == 3);
assert(arr_bp[0] == convert(bytes, p1));
assert(arr_bp[1] == convert(bytes, p2));
assert(arr_bp[2] == convert(bytes, p3));
arr_ip: array of int = convert(array of int, {p1, p2, p3});
assert(len(arr_ip) == 3);
assert(arr_ip[0] == convert(int, p1));
assert(arr_ip[1] == convert(int, p2));
assert(arr_ip[2] == convert(int, p3));
arr_sp: array of string = convert(array of string, {p1, p2, p3});
assert(len(arr_sp) == 3);
assert(arr_sp[0] == convert(string, p1));
assert(arr_sp[1] == convert(string, p2));
assert(arr_sp[2] == convert(string, p3));
arr_if: array of int = convert(array of int, {f1, f2, f3});
assert(len(arr_if) == 3);
assert(arr_if[0] == convert(int, f1));
assert(arr_if[1] == convert(int, f2));
assert(arr_if[2] == convert(int, f3));
arr_sf: array of string = convert(array of string, {f1, f2, f3});
assert(len(arr_sf) == 3);
assert(arr_sf[0] == convert(string, f1));
assert(arr_sf[1] == convert(string, f2));
assert(arr_sf[2] == convert(string, f3));
arr_uf: array of uint = convert(array of uint, {f1, f2, f3});
assert(len(arr_uf) == 3);
assert(arr_uf[0] == convert(uint, f1));
assert(arr_uf[1] == convert(uint, f2));
assert(arr_uf[2] == convert(uint, f3));
arr_bi: array of bytes = convert(array of bytes, {i1, i2, i3}, "szl");
assert(len(arr_bi) == 3);
assert(arr_bi[0] == convert(bytes, i1, "szl"));
assert(arr_bi[1] == convert(bytes, i2, "szl"));
assert(arr_bi[2] == convert(bytes, i3, "szl"));
arr_pi: array of fingerprint = convert(array of fingerprint, {i1, i2, i3});
assert(len(arr_pi) == 3);
assert(arr_pi[0] == convert(fingerprint, i1));
assert(arr_pi[1] == convert(fingerprint, i2));
assert(arr_pi[2] == convert(fingerprint, i3));
arr_fi: array of float = convert(array of float, {i1, i2, i3});
assert(len(arr_fi) == 3);
assert(arr_fi[0] == convert(float, i1));
assert(arr_fi[1] == convert(float, i2));
assert(arr_fi[2] == convert(float, i3));
arr_si: array of string = convert(array of string, {i1, i2, i3});
assert(len(arr_si) == 3);
assert(arr_si[0] == convert(string, i1));
assert(arr_si[1] == convert(string, i2));
assert(arr_si[2] == convert(string, i3));
arr_ti: array of time = convert(array of time, {i1, i2, i3});
assert(len(arr_ti) == 3);
assert(arr_ti[0] == convert(time, i1));
assert(arr_ti[1] == convert(time, i2));
assert(arr_ti[2] == convert(time, i3));
arr_ui: array of uint = convert(array of uint, {i1, i2, i3});
assert(len(arr_ui) == 3);
assert(arr_ui[0] == convert(uint, i1));
assert(arr_ui[1] == convert(uint, i2));
assert(arr_ui[2] == convert(uint, i3));
arr_ls: array of bool = convert(array of bool, {sl1, sl2, sl3});
assert(len(arr_ls) == 3);
assert(arr_ls[0] == convert(bool, sl1));
assert(arr_ls[1] == convert(bool, sl2));
assert(arr_ls[2] == convert(bool, sl3));
arr_bs: array of bytes = convert(array of bytes, {sb1, sb2, sb3});
assert(len(arr_bs) == 3);
assert(arr_bs[0] == convert(bytes, sb1));
assert(arr_bs[1] == convert(bytes, sb2));
assert(arr_bs[2] == convert(bytes, sb3));
arr_ps: array of fingerprint = convert(array of fingerprint, {sp1, sp2, sp3});
assert(len(arr_ps) == 3);
assert(arr_ps[0] == convert(fingerprint, sp1));
assert(arr_ps[1] == convert(fingerprint, sp2));
assert(arr_ps[2] == convert(fingerprint, sp3));
arr_fs: array of float = convert(array of float, {sf1, sf2, sf3});
assert(len(arr_fs) == 3);
assert(arr_fs[0] == convert(float, sf1));
assert(arr_fs[1] == convert(float, sf2));
assert(arr_fs[2] == convert(float, sf3));
arr_is: array of int = convert(array of int, {si1, si2, si3}, 10);
assert(len(arr_is) == 3);
assert(arr_is[0] == convert(int, si1, 10));
assert(arr_is[1] == convert(int, si2, 10));
assert(arr_is[2] == convert(int, si3, 10));
arr_ts: array of time = convert(array of time, {st1, st2, st3});
assert(len(arr_ts) == 3);
assert(arr_ts[0] == convert(time, st1));
assert(arr_ts[1] == convert(time, st2));
assert(arr_ts[2] == convert(time, st3));
arr_us: array of uint = convert(array of uint, {su1, su2, su3}, 10);
assert(len(arr_us) == 3);
assert(arr_us[0] == convert(uint, su1, 10));
assert(arr_us[1] == convert(uint, su2, 10));
assert(arr_us[2] == convert(uint, su3, 10));
arr_it: array of int = convert(array of int, {t1, t2, t3});
assert(len(arr_it) == 3);
assert(arr_it[0] == convert(int, t1));
assert(arr_it[1] == convert(int, t2));
assert(arr_it[2] == convert(int, t3));
arr_st: array of string = convert(array of string, {t1, t2, t3});
assert(len(arr_st) == 3);
assert(arr_st[0] == convert(string, t1));
assert(arr_st[1] == convert(string, t2));
assert(arr_st[2] == convert(string, t3));
arr_ut: array of uint = convert(array of uint, {t1, t2, t3});
assert(len(arr_ut) == 3);
assert(arr_ut[0] == convert(uint, t1));
assert(arr_ut[1] == convert(uint, t2));
assert(arr_ut[2] == convert(uint, t3));
arr_bu: array of bytes = convert(array of bytes, {u1, u2, u3}, "szl");
assert(len(arr_bu) == 3);
assert(arr_bu[0] == convert(bytes, u1, "szl"));
assert(arr_bu[1] == convert(bytes, u2, "szl"));
assert(arr_bu[2] == convert(bytes, u3, "szl"));
arr_pu: array of fingerprint = convert(array of fingerprint, {u1, u2, u3});
assert(len(arr_pu) == 3);
assert(arr_pu[0] == convert(fingerprint, u1));
assert(arr_pu[1] == convert(fingerprint, u2));
assert(arr_pu[2] == convert(fingerprint, u3));
arr_fu: array of float = convert(array of float, {u1, u2, u3});
assert(len(arr_fu) == 3);
assert(arr_fu[0] == convert(float, u1));
assert(arr_fu[1] == convert(float, u2));
assert(arr_fu[2] == convert(float, u3));
arr_iu: array of int = convert(array of int, {u1, u2, u3});
assert(len(arr_iu) == 3);
assert(arr_iu[0] == convert(int, u1));
assert(arr_iu[1] == convert(int, u2));
assert(arr_iu[2] == convert(int, u3));
arr_su: array of string = convert(array of string, {u1, u2, u3});
assert(len(arr_su) == 3);
assert(arr_su[0] == convert(string, u1));
assert(arr_su[1] == convert(string, u2));
assert(arr_su[2] == convert(string, u3));
arr_tu: array of time = convert(array of time, {u1, u2, u3});
assert(len(arr_tu) == 3);
assert(arr_tu[0] == convert(time, u1));
assert(arr_tu[1] == convert(time, u2));
assert(arr_tu[2] == convert(time, u3));
