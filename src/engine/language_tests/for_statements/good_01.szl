# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#!/bin/env szl
#szl_options

#desc: for statement.

from_0_to_3: array of int = { 0, 1, 2, 3 };

#inst: for loop executes while condition is true.

for (x: int = 0; x < 4; x++)
  assert(x < 4 && x == from_0_to_3[x],
         format("(inside for) x = %d, (x < 4) == %b\n", x, x < 4));

a_iterations: int = 0;
b_iterations: int = 0;
c_iterations: int = 0;
for (a: int = 0; a < 4; a++) {
  assert(a < 4 && a == from_0_to_3[a],
         format("(inside for) a = %d, (a < 4) == %b\n", a, a < 4));

  b_iterations = 0;
  for (b: int = 0; b < 4; b++) {
    assert(b < 4 && b == from_0_to_3[b],
           format("(inside for) b = %d, (b < 4) == %b\n", b, b < 4));

    c_iterations = 0;
    for (c: int = 0; c < 4; c++) {
      assert(c < 4 && c == from_0_to_3[c],
             format("(inside for) c = %d, (c < 4) == %b\n", c, c < 4));
      c_iterations++;
    }
    assert(c_iterations == 4);
    b_iterations++;
  }
  assert(b_iterations == 4);
  a_iterations++;
}
assert(a_iterations == 4 && b_iterations == 4 && c_iterations == 4);

