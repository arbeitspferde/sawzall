# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#!/bin/env szl

type T0 = parsedmessage {
  x: int @ 1: int64,
  y: float @ 2: float,
};

type T1 = parsedmessage {
  x: T0 @ 1,
  y: array of T0 @ 2,
};

p0: T0 = { 0, 0.5 };
p1: T0 = { 1, 1.5 };
p2: T0 = { 2, 2.5 };
p3: T0 = { 3, 3.5 };
p4: T1 = { p0, { p1, p2 } };

# get the bytes for two of the parsedmessages
assert(string(bytes(p3), "hex") == "08031500006040");
assert(string(bytes(p4), "hex") == "0a070800150000003f12070801150000c03f120708021500002040");

# the following 2 lines are generated by the previous 2 lines...
b3: bytes = bytes("08031500006040", "hex");
b4: bytes = bytes("0a070800150000003f12070801150000c03f120708021500002040", "hex");

pp3: T0 = b3;
pp4: T1 = b4;

if (p3 != pp3 || p4 != pp4) {
  assert(false, "Parsedmessage did not match when" +
         " converted to bytes and back");
}
