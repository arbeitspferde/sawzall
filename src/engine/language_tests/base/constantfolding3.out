empty: string = new(string, nrand(1), 1);
if (nrand(5) == 17)
{
	1 / convert(int, tobase64(B"google", true) == B"Z29vZ2xl");
	1 / convert(int, tobase64(B"google", true) != B"Z29vZ2xl");
	1 / convert(int, frombase64(B"Z29vZ2xl", true) == B"google");
	1 / convert(int, frombase64(B"Z29vZ2xl", true) != B"google");
	frombase64(B"Z29#Z2xl", true);
	1 / (convert(int, fingerprintof("abc")) - 938416016898067150);
	1 / (convert(int, fingerprintof("abc")) - 938416016898067149);
	1 / convert(int, format("%d", 123) == "123");
	1 / convert(int, format("%d", 123) != "123");
	1 / (len("abc") - 4);
	1 / (len("abc") - 3);
	1 / abs(1);
	1 / abs(0);
	1.0 / abs(1.0);
	1.0 / abs(0.0);
	1 / min(3, 1);
	1 / min(3, 0);
	1 / max(-3, 1);
	1 / max(-3, 0);
	1.0 / min(3.0, 1.0);
	1.0 / min(3.0, 0.0);
	1.0 / max(-3.0, 1.0);
	1.0 / max(-3.0, 0.0);
	1 / convert(int, match("a.c", "abc"));
	1 / convert(int, match("a.c", "xxx"));
	match("a[b", "abc");
	match("b[c" + "def", "abc");
	match("c[d" + "efg", "abc" + empty);
	match(".X(.+)+X", "bbbbXcXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
	matchposns("d[e", "abc");
	matchposns("e[f" + "ghi", "abc");
	matchstrs("f[g", "abc");
	matchstrs("g[h" + "ijk", "abc");
	1 / (convert(int, addday(1234567887654321T, 3)) - 1234827087654320);
	1 / (convert(int, addday(1234567887654321T, 3)) - 1234827087654321);
	addday(1234567887654321T, 3, "Lower_Slobovia");
	1 / (convert(int, addmonth(1234567887654321T, 3)) - 1242253887654320);
	1 / (convert(int, addmonth(1234567887654321T, 3)) - 1242253887654321);
	addmonth(1234567887654321T, 3, "Lower_Slobovia");
	1 / (convert(int, addweek(1234567887654321T, 3)) - 1236382287654320);
	1 / (convert(int, addweek(1234567887654321T, 3)) - 1236382287654321);
	addweek(1234567887654321T, 3, "Lower_Slobovia");
	1 / (convert(int, addyear(1234567887654321T, 3)) - 1329175887654320);
	1 / (convert(int, addyear(1234567887654321T, 3)) - 1329175887654321);
	addyear(1234567887654321T, 3, "Lower_Slobovia");
	1 / (dayofmonth(1234567887654321T) - 14);
	1 / (dayofmonth(1234567887654321T) - 13);
	dayofmonth(1234567887654321T, "Lower_Slobovia");
	1 / (dayofweek(1234567887654321T) - 6);
	1 / (dayofweek(1234567887654321T) - 5);
	dayofweek(1234567887654321T, "Lower_Slobovia");
	1 / (dayofyear(1234567887654321T) - 45);
	1 / (dayofyear(1234567887654321T) - 44);
	dayofyear(1234567887654321T, "Lower_Slobovia");
	1 / (hourof(1234567887654321T) - 16);
	1 / (hourof(1234567887654321T) - 15);
	hourof(1234567887654321T, "Lower_Slobovia");
	1 / (minuteof(1234567887654321T) - 32);
	1 / (minuteof(1234567887654321T) - 31);
	minuteof(1234567887654321T, "Lower_Slobovia");
	1 / (monthof(1234567887654321T) - 3);
	1 / (monthof(1234567887654321T) - 2);
	monthof(1234567887654321T, "Lower_Slobovia");
	1 / (secondof(1234567887654321T) - 28);
	1 / (secondof(1234567887654321T) - 27);
	secondof(1234567887654321T, "Lower_Slobovia");
	1 / (yearof(1234567887654321T) - 2010);
	1 / (yearof(1234567887654321T) - 2009);
	yearof(1234567887654321T, "Lower_Slobovia");
	1 / (convert(int, trunctoday(1234567887654321T)) - 1234512000000001);
	1 / (convert(int, trunctoday(1234567887654321T)) - 1234512000000000);
	trunctoday(1234567887654321T, "Lower_Slobovia");
	1 / (convert(int, trunctohour(1234567887654321T)) - 1234566000000001);
	1 / (convert(int, trunctohour(1234567887654321T)) - 1234566000000000);
	trunctohour(1234567887654321T, "Lower_Slobovia");
	1 / (convert(int, trunctominute(1234567887654321T)) - 1234567860000001);
	1 / (convert(int, trunctominute(1234567887654321T)) - 1234567860000000);
	trunctominute(1234567887654321T, "Lower_Slobovia");
	1 / (convert(int, trunctomonth(1234567887654321T)) - 1233475200000001);
	1 / (convert(int, trunctomonth(1234567887654321T)) - 1233475200000000);
	trunctomonth(1234567887654321T, "Lower_Slobovia");
	1 / (convert(int, trunctosecond(1234567887654321T)) - 1234567887000001);
	1 / (convert(int, trunctosecond(1234567887654321T)) - 1234567887000000);
	trunctosecond(1234567887654321T, "Lower_Slobovia");
	1 / (convert(int, trunctoyear(1234567887654321T)) - 1230796800000001);
	1 / (convert(int, trunctoyear(1234567887654321T)) - 1230796800000000);
	trunctoyear(1234567887654321T, "Lower_Slobovia");
	1 / (highbit(42) - 7);
	1 / (highbit(42) - 6);
	1 / convert(int, lowercase("ABC") == "abc");
	1 / convert(int, lowercase("ABC") != "abc");
	1 / convert(int, uppercase("abc") == "ABC");
	1 / convert(int, uppercase("abc") != "ABC");
	1 / (strfind("oo", "google") - 2);
	1 / (strfind("oo", "google") - 1);
	1 / (strrfind("oo", "google") - 2);
	1 / (strrfind("oo", "google") - 1);
	1 / convert(int, strreplace("google", "og", "gg", true) == "goggle");
	1 / convert(int, strreplace("google", "og", "gg", true) != "goggle");
	1.0 / (round(ln(0.5) * 100.0) + 169.0);
	1.0 / (round(ln(0.5) * 100.0) + 69.0);
	1.0 / (round(log10(0.5) * 100.0) + 130.0);
	1.0 / (round(log10(0.5) * 100.0) + 30.0);
	1.0 / (round(exp(0.5) * 100.0) - 65.0);
	1.0 / (round(exp(0.5) * 100.0) - 165.0);
	1.0 / (round(sqrt(0.5) * 100.0) - 171.0);
	1.0 / (round(sqrt(0.5) * 100.0) - 71.0);
	1.0 / (round(pow(0.5, 0.5) * 100.0) - 171.0);
	1.0 / (round(pow(0.5, 0.5) * 100.0) - 71.0);
	1.0 / (round(sin(0.5) * 100.0) - 148.0);
	1.0 / (round(sin(0.5) * 100.0) - 48.0);
	1.0 / (round(cos(0.5) * 100.0) - 188.0);
	1.0 / (round(cos(0.5) * 100.0) - 88.0);
	1.0 / (round(tan(0.5) * 100.0) - 155.0);
	1.0 / (round(tan(0.5) * 100.0) - 55.0);
	1.0 / (round(asin(0.5) * 100.0) - 152.0);
	1.0 / (round(asin(0.5) * 100.0) - 52.0);
	1.0 / (round(acos(0.5) * 100.0) - 5.0);
	1.0 / (round(acos(0.5) * 100.0) - 105.0);
	1.0 / (round(atan(0.5) * 100.0) - 146.0);
	1.0 / (round(atan(0.5) * 100.0) - 46.0);
	1.0 / (round(atan2(0.5, 0.5) * 100.0) - 179.0);
	1.0 / (round(atan2(0.5, 0.5) * 100.0) - 79.0);
	1.0 / (round(sinh(0.5) * 100.0) - 152.0);
	1.0 / (round(sinh(0.5) * 100.0) - 52.0);
	1.0 / (round(cosh(0.5) * 100.0) - 13.0);
	1.0 / (round(cosh(0.5) * 100.0) - 113.0);
	1.0 / (round(tanh(0.5) * 100.0) - 146.0);
	1.0 / (round(tanh(0.5) * 100.0) - 46.0);
	1.0 / (round(asinh(0.5) * 100.0) - 148.0);
	1.0 / (round(asinh(0.5) * 100.0) - 48.0);
	1.0 / (round(acosh(1.5) * 100.0) - 196.0);
	1.0 / (round(acosh(1.5) * 100.0) - 96.0);
	1.0 / (round(atanh(0.7) * 100.0) - 187.0);
	1.0 / (round(atanh(0.7) * 100.0) - 87.0);
	1.0 / (fabs(-1.5) - 0.5);
	1.0 / (fabs(-1.5) - 1.5);
	1.0 / (ceil(-3.3) + 4.0);
	1.0 / (ceil(-3.3) + 3.0);
	1.0 / (floor(-3.3) + 3.0);
	1.0 / (floor(-3.3) + 4.0);
	1.0 / (round(-3.6) + 3.0);
	1.0 / (round(-3.6) + 4.0);
	1.0 / (trunc(-3.6) + 4.0);
	1.0 / (trunc(-3.6) + 3.0);
	1 / convert(int, isnan(sqrt(-1.0)));
	1 / convert(int, isnan(sqrt(1.0)));
	1 / convert(int, isinf(ln(0.0)));
	1 / convert(int, isinf(ln(1.0)));
	1 / convert(int, isfinite(ln(1.0)));
	1 / convert(int, isfinite(ln(0.0)));
	1 / convert(int, isnormal(1.0));
	1 / convert(int, isnormal(9.99988867182683e-321));
}
