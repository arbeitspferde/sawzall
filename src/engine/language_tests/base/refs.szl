# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#
# This test exposes some "infinite" ref counts which are coming
# into the game when using --preallocate_default_proto which is
# the default setting. The test failed originally because the infinite
# ref count used originally overflowed and led to a negative value.
#

type T1 = proto { c: int };

type T2 = proto {
  b: T1
};

x: T2 = bytes("");
y: T2 = x;
assert(DEBUG("ref", x) == 2);
assert(DEBUG("ref", x.b) == 1073741823);
assert(DEBUG("ref", x.b.c) == 1);
x.b.c = 1;


#
# This test is the original program that failed and was
# submitted via bug report 108107.  (type changed from string to bytes)
#

type xxgood = { c: array of bytes @ 1 };

type xxbad = {
  b: xxgood @ 2
};


xbad: array of xxbad = new(array of xxbad, 3, convert(xxbad, bytes("")));
xgood: array of xxgood = new(array of xxgood, 3, convert(xxgood, bytes("")));

r1: array of bytes = new(array of bytes, 3, bytes("a"));

xbad[0].b.c = r1;
xgood[0].c = r1;

assert(string(xbad[0].b.c[0]) == "a");
assert(string(xgood[0].c[0]) == "a");

r2: array of bytes = new(array of bytes, 3, bytes("b"));

xbad[1].b.c = r2;
xgood[1].c = r2;

assert(string(xbad[0].b.c[0]) == "a");
assert(string(xgood[0].c[0]) == "a");

assert(string(xbad[1].b.c[0]) == "b");
assert(string(xgood[1].c[0]) == "b");
