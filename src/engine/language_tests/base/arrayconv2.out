type T0 = {};
type T1 = {x: int};
type T2 = {x: int, y: int};
type T3 = {x: int, y: int, z: int};
type T4 = {s: string, t: float};
x0a: T0;
x1a: T1;
x2a: T2;
x3a: T3;
x4a: T4;
v0a: array of int = {};
v1a: array of int = {1};
v2a: array of int = {1, 2};
v3a: array of int = {1, 2, 3};
v4a: array of int = {3, 4};
x0a = convert(T0, {});
x1a = convert(T1, {v1a[0]});
x2a = convert(T2, {v2a[0], v2a[1]});
x3a = convert(T3, {v3a[0], v3a[1], v3a[2]});
x4a = convert(T4, {convert(string, v4a[0]), convert(float, v4a[1])});
x0b: T0;
x1b: T1;
x2b: T2;
x3b: T3;
x4b: T4;
v0b: array of int = {1};
v1b: array of int = {1, 2};
v2b: array of int = {1, 2, 3};
v3b: array of int = {};
v4b: array of int = {3, 4, 5};
x0b = convert(T0, {});
x1b = convert(T1, {v1b[0]});
x2b = convert(T2, {v2b[0], v2b[1]});
x3b = convert(T3, {v3b[0], v3b[1], v3b[2]});
x4b = convert(T4, {convert(string, v4b[0]), convert(float, v4b[1])});
emit _undef_cnt <- 1;
emit _undef_details["base/arrayconv2.szl:59: x0b = T0(v0b); (array -> tuple conversion failed: len(v0b) != 0)"] <- 1;
