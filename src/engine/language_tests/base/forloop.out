counter: int = 0;
move_next: function(i: int) {
	counter = counter + i;
}
;
init_counter: function(n: int): int {
	counter = n;
	return n;
}
;
expect: array of string = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"};
for (c: int = 1; c < 10; c++)
{
	assert(convert(string, c) == expect[c]);
}
expect_int: array of int = {-2, 0, 2, 4, 6, 8};
expected_index: int = 0;
for (i: int = init_counter(-2); counter < 10; move_next(2))
{
	assert(counter == expect_int[expected_index]);
	expected_index++;
}
s: int = 0;
for (i: int = 1; i <= 10; i++)
	s = s + i;
assert(s == 55);
t: int = 0;
str: string = "abcdefghij";
for (i: int = len(str); i > 0; i--)
	t = t + str[i - 1];
assert(t == (45 + (len(str) * 97)));
