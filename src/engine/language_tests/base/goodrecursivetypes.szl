# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

# Variations on recursive type use using arrays, maps and tuples.
# For proto tuple tests - see goodrecursivetypesproto.szl
# For function tests    - see goodrecursivetypesfunc.szl

type T1 = array of T1;
t1a: T1 = { };
t1b: T1 = { { } };
t1c: T1 = { { { } } };

type T2 = map[T2] of int;
t2a: T2 = {:};
t2b: T2 = { {:} : 1 };
t2c: T2 = { { {:} : 1 } : 2 };

type T3 = map[int] of T3;
t3a: T3 = {:};
t3b: T3 = { 1 : {:} };
t3c: T3 = { 1 : { 2 : {:} } };

type T4 = map[T4] of T4;
t4a: T4 = {:};
t4b: T4 = { {:} : {:} };
t4c: T4 = { { {:} : {:} } : {:} };
t4d: T4 = { {:} : { {:} : {:} } };
t4e: T4 = { { {:} : {:} } : { {:} : {:} } };

type T5 = { x: array of T5 };
t5a: T5 = { { } };
t5b: T5 = { { { { } } } };

type T6 = { x: map[T6] of int };
t6a: T6 = { {:} };
t6b: T6 = { { { {:} } : 1 } };

type T7 = { x: map[int] of T7 };
t7a: T7 = { {:} };
t7b: T7 = { { 1 : { {:} } } };

type T8 = { x: map[T8] of T8 };
t8a: T8 = { {:} };
t8b: T8 = { { { {:} } : { {:} } } };

type T9 = array of { x: T9 };
t9a: T9 = { };
t9b: T9 = { { { } } };

type T10 = map[{ x: T10 }] of int;
t10a: T10 = {:};
t10b: T10 = { { {:} } : 1 };

type T11 = map[int] of { x: T11 };
t11a: T11 = {:};
t11b: T11 = { 1 : { {:} } };

type T12 = map[{ x: T12 }] of { y: T12 };
t12a: T12 = {:};
t12b: T12 = { { {:} } : { {:} } };

type T13 = array of map[T13] of int;
t13a: T13 = { };
t13b: T13 = { {:} };
t13c: T13 = { { { } : 1 } };

type T14 = array of map[int] of T14;
t14a: T14 = { };
t14b: T14 = { {:} };
t14c: T14 = { { 1 : { } } };

type T15 = array of map[T15] of T15;
t15a: T15 = { };
t15b: T15 = { {:} };
t15c: T15 = { { { } : { } } };

type T16 = map[array of T16] of int;
t16a: T16 = {:};
t16b: T16 = { { } : 1 };
t16c: T16 = { { {:} } : 1 };

type T17 = map[array of T17] of array of T17;
t17a: T17 = {:};
t17b: T17 = { { } : { } };
t17c: T17 = { { {:} } : { {:} } };

type T18 = { x: array of { y: T18 } };
t18a: T18 = { { } };
t18b: T18 = { { { { { } } } } };

type T19 = { x: map[{ x: T19 }] of int };
t19a: T19 = { {:} };
t19b: T19 = { { { { {:} } } : 1 } };

type T20 = { x: map[int] of { x: T20 } };
t20a: T20 = { {:} };
t20b: T20 = { { 1 : { { {:} } } } };

type T21 = { x: map[{ x: T21 }] of { y: T21 } };
t21a: T21 = { {:} };
t21b: T21 = { { { { {:} } } : { { {:} } } } };
