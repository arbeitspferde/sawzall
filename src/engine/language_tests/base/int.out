one: int;
two: int;
three: int;
minusthree: int;
seven: int;
one = 1;
two = 2;
three = 3;
seven = 7;
minusthree = -3;
assert(1 == one);
assert(((one + one) + one) == three);
assert((-three) == minusthree);
assert((seven - three) == (three + one));
assert(((two * three) + one) == seven);
assert((seven / three) == two);
assert((seven % three) == one);
assert((seven >> one) == three);
assert((three << one) == (seven - one));
assert((seven & three) == three);
assert((seven ^ three) == (three + one));
assert((((one << two) | (one << one)) | one) == seven);
assert(minusthree <= one);
assert(minusthree < one);
assert(one >= minusthree);
assert(one > minusthree);
big: int = 1 << 63;
lessbig: int = 1 << 62;
assert((big >> one) == lessbig);
assert(27 == 27);
assert(27 == 27);
assert(27 == 27);
assert(27 == 27);
assert(27 == 27);
assert(-1 == -1);
assert(-1 == -1);
assert(-1 == -1);
assert((-9223372036854775807 - 1) == -9223372036854775808);
assert((1 << 63) == -9223372036854775808);
assert(convert(int, 0x8000000000000000P) == -9223372036854775808);
