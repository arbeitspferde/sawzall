# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

a: array of int = {};
a[0]++;
a[0] = 1;
b: bytes = "";
b[0]++;
b[0] = 1;
s: string = "";
s[0]++;
s[0] = 1;
m: map[int] of int = {:};
m[0]++;

a1: array of int = {1};
i64: int = 1 << 32;  # check must be applied to untruncated 64-bit index
a1[i64 + 0]++;
a1[i64 + 0] = 1;
b1: bytes = "b";
b1[i64 + 0]++;
b1[i64 + 0] = 1;
s1: string = "a";
s1[i64 + 0]++;
s1[i64 + 0] = 1;
m1: map[int] of int = {0:0};
m1[i64 + 0]++;

t: { a: array of int, b: bytes, s: string, m: map[int] of int } =
  { {}, bytes(""), "", {:} };

t.a[0]++;
t.a[0] = 1;
t.b[0]++;
t.b[0] = 1;
t.s[0]++;
t.s[0] = 1;
t.m[0]++;

# more index test cases
x: int;
n: int = 32;
s0: string = new(string, nrand(1), 1);
sn: string = new(string, nrand(1)+n, '\u5000');

# legal indexes
x = s1[  0];
x = sn[  0];
x = sn[n-1];

# illegal indexes
x = s0[ 0];
x = s1[-1];
x = s1[ 1];
x = sn[-n];
x = sn[ n];

# illegaly storing NUL chars
s1[0] = 0;
x = s1[0];
sn[n-1] = 0;
x = sn[n-1];

# illegaly converting a bytes containing NUL chars into a string
bn: bytes = new(bytes, n, 'a');
bn[n / 2] = 0;  # store a 0 byte
x = string(bn, "UTF-8")[0];  # conversion should fail and result in undefined value

b2: bytes = new(bytes, n, 200);
b2[n / 2] = 0;  # store a 0 byte
x = string(b2, "latin-1")[0];  # conversion should fail and result in undefined value
