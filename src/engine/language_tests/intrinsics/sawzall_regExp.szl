# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#!/bin/env szl
#szl_options

regularExpression: string = load("intrinsics/regularExp");

if (! def(regularExpression))
{
    emit stderr <- "File does not exist or it does not contain data";
    return;
}

# read all the regular expression into regExpArray
regExpArray: array of string = sawzall(regularExpression, "[^\\t\\n]+", skip "@@@@", "[\\w]+", skip "\n+");

regExpArrayLength: int = len(regExpArray);

currentFileName: string;
currentRegExp: string;

testRunOutput: array of string;

for (i: int = 0; i < regExpArrayLength; i = i+2)
{
    currentRegExp = regExpArray[i];
    currentFileName = regExpArray[i+1];

    emit stdout <- "regExp = " + regExpArray[i];
    emit stdout <- "fileName = " + regExpArray[i+1];

    currentTestFileData: bytes = load("intrinsics/" + currentFileName);
    
    if (! def(currentTestFileData))
    {
	emit stderr <- "File = " + currentFileName + "does not exist.";
	return;
    }
    
    emit stdout <- "testData\n" + string(currentTestFileData);
    
    testRunOutput = sawzall(string(currentTestFileData), currentRegExp, skip "[\n]*");

    emit stdout <- "testOutput";
    for (j: int = 0; j < len(testRunOutput); j++) 
    {
	emit stdout <- testRunOutput[j];
    }

    emit stdout <- "";
}
