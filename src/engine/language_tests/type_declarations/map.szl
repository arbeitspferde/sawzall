# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#!/bin/env szl

#desc:     This script tests variables of type map

#inst: ####  Testing for declarations of variables of type map with literal initialization ####

Mioi: map [int] of int = {1:1,2:324,3:324,4:32421};
Mios: map [int] of string = {1:"fdgh",2:"dkljsda",3:"dfksjd___",4:"dhf__dfsd"};
Miof: map [int] of float = {1:1.967,2:324.7865,3:324.12,4:32421.324};
Miob: map [int] of bool = {1:true,2:false,3:true,4:false};

for (i:int = 1; i<5; i++){
    DEBUG ("print","%5d\t",Mioi[i]);
    DEBUG ("print","%s\t",Mios[i]);
    DEBUG ("print","%3f\t",Miof[i]);
    DEBUG ("print","%b\t\n",Miob[i]);
}


#inst:   ######## Testing maps with composite datatypes  #########

### map [tuple] of int

MToi: map [{string,int}]of int = {{"urjit",1}:1,{"amit",2}:2};

DEBUG("print","\n%d",MToi[{"urjit",1}]);
DEBUG("print","\n%d",MToi[{"amit",2}]);

### map [int] of array..

MioA: map [int] of array of int = {1:{1,2,3,4,5,6,7,8,9},2:{9,8,7,6,5,4,3,2,1}};

i:int=0;
for(i=1;i<9;i++){
    DEBUG("print","\n\n%d\t",MioA[1][i]);
}

### map [int] of tuple

MoiT: map [int] of {name:string,number: int} = {1:{"Urjit",12},2:{"Amit",34}};

DEBUG("print","MoiT.name %s\tMoiT.number %d\n",MoiT[1].name,MoiT[1].number);
DEBUG("print","MoiT.name %s\tMoiT.number %d\n",MoiT[2].name,MoiT[2].number);


### map [array] of int

MAoi: map [array of int] of int = {{1,2,3,4}:1,{5,6,7,8}:2};
Aoi: array of int = {1,2,3,4};

DEBUG("print","%d\t",MAoi[{1,2,3,4}]);
DEBUG("print","%d\t",MAoi[{5,6,7,8}]);
DEBUG("print","%d\t",MAoi[Aoi]);

Aoi ={5,6,7,8};
DEBUG("print","%d\n",MAoi[Aoi]);

