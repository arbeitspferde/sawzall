counter: int = 0;
count: function(): string {
	counter = counter + 1;
	return "case " + convert(string, counter);
}
;
assert(addday(convert(time, "Sat Apr 1 12:00:00 EST 2006"), 3, "EST") == convert(time, "Sat Apr 4 12:00:00 EDT 2006"), count());
assert(addweek(convert(time, "Sat Apr 1 12:00:00 EST 2006"), 1, "EST") == convert(time, "Sat Apr 8 12:00:00 EDT 2006"), count());
assert(addmonth(convert(time, "Sat Apr 1 12:00:00 EST 2006"), 1, "EST") == convert(time, "Mon May 1 12:00:00 EDT 2006"), count());
assert(addyear(convert(time, "Sat Apr 1 12:00:00 EST 2006"), 1, "EST") == convert(time, "Sun Apr 1 12:00:00 EDT 2007"), count());
assert(secondof(convert(time, "Mon May 1 01:12:34 EDT 2006"), "PDT") == 34, count());
assert(secondof(convert(time, "Mon May 1 01:12:34 EDT 2006"), "GMT") == 34, count());
assert(minuteof(convert(time, "Mon May 1 01:12:34 EDT 2006"), "PDT") == 12, count());
assert(minuteof(convert(time, "Mon May 1 01:12:34 EDT 2006"), "GMT") == 12, count());
assert(hourof(convert(time, "Mon May 1 01:12:34 EDT 2006"), "PDT") == 22, count());
assert(hourof(convert(time, "Mon May 1 01:12:34 EDT 2006"), "GMT") == 5, count());
assert(dayofweek(convert(time, "Mon May 1 01:00:00 EDT 2006"), "PDT") == 7, count());
assert(dayofweek(convert(time, "Mon May 1 01:00:00 EDT 2006"), "GMT") == 1, count());
assert(dayofmonth(convert(time, "Mon May 1 01:00:00 EDT 2006"), "PDT") == 30, count());
assert(dayofmonth(convert(time, "Mon May 1 01:00:00 EDT 2006"), "GMT") == 1, count());
assert(dayofyear(convert(time, "Mon May 1 01:00:00 EDT 2006"), "PDT") == 120, count());
assert(dayofyear(convert(time, "Mon May 1 01:00:00 EDT 2006"), "GMT") == 121, count());
assert(yearof(convert(time, "Sun Jan 1 01:00:00 EST 2006"), "PST") == 2005, count());
assert(yearof(convert(time, "Sun Jan 1 01:00:00 EST 2006"), "GMT") == 2006, count());
assert(trunctosecond(convert(time, "Mon May 1 01:12:34.56 EDT 2006"), "PDT") == convert(time, "Mon May 1 01:12:34.00 EDT 2006"), count());
assert(trunctosecond(convert(time, "Mon May 1 01:12:34.56 EDT 2006"), "GMT") == convert(time, "Mon May 1 01:12:34.00 EDT 2006"), count());
assert(trunctominute(convert(time, "Mon May 1 01:12:34 EDT 2006"), "PDT") == convert(time, "Mon May 1 01:12:00 EDT 2006"), count());
assert(trunctominute(convert(time, "Mon May 1 01:12:34 EDT 2006"), "GMT") == convert(time, "Mon May 1 01:12:00 EDT 2006"), count());
assert(trunctohour(convert(time, "Mon May 1 01:12:34 EDT 2006"), "PDT") == convert(time, "Mon May 1 01:00:00 EDT 2006"), count());
assert(trunctohour(convert(time, "Mon May 1 01:12:34 EDT 2006"), "GMT") == convert(time, "Mon May 1 01:00:00 EDT 2006"), count());
assert(trunctohour(convert(time, "Sun Apr 2 02:12:34 EDT 2006"), "PDT") == convert(time, "Sun Apr 2 02:00:00 EDT 2006"), count());
assert(trunctohour(convert(time, "Sun Apr 2 02:12:34 EDT 2006"), "EDT") == convert(time, "Sun Apr 2 02:00:00 EDT 2006"), count());
assert(trunctohour(convert(time, "Sun Apr 2 02:12:34 EDT 2006"), "EST") == convert(time, "Sun Apr 2 02:00:00 EDT 2006"), count());
assert(trunctohour(convert(time, "Sun Apr 2 02:12:34 EST 2006"), "EDT") == convert(time, "Sun Apr 2 02:00:00 EST 2006"), count());
assert(trunctohour(convert(time, "Sun Apr 2 02:12:34 EST 2006"), "PST") == convert(time, "Sun Apr 2 02:00:00 EST 2006"), count());
assert(trunctoday(convert(time, "Mon Apr 3 04:00:00 GMT 2006"), "PDT") == convert(time, "Sun Apr 2 00:00:00 PST 2006"), count());
assert(trunctoday(convert(time, "Mon Apr 3 04:00:00 GMT 2006"), "GMT") == convert(time, "Mon Apr 3 00:00:00 GMT 2006"), count());
assert(trunctomonth(convert(time, "Mon Apr 3 12:00:00 GMT 2006"), "PDT") == convert(time, "Sat Apr 1 00:00:00 PST 2006"), count());
assert(trunctomonth(convert(time, "Mon Apr 3 12:00:00 GMT 2006"), "GMT") == convert(time, "Sat Apr 1 00:00:00 GMT 2006"), count());
assert(trunctoyear(convert(time, "Sun Jan 1 01:00:00 EST 2006"), "PST") == convert(time, "Sat Jan 1 00:00:00 PST 2005"), count());
assert(trunctoyear(convert(time, "Sun Jan 1 01:00:00 EST 2006"), "GMT") == convert(time, "Sat Jan 1 00:00:00 GMT 2006"), count());
