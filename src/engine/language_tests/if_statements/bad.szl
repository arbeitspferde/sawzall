# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

#!/bin/env szl
#szl_options

#desc: Break statement can't be inside if-statement if there is no enclosing
#desc: for, while, switch statement.

if (true) {
    DEBUG("print", "Success\n");
    break;
}

if (false) {
   ;
}
else {
    DEBUG("print", "Success\n");
    break;
}

if (false) {
   break;
}
else {
   break;
}

###############################################################################
#!/bin/env szl
#szl_options

#desc: Access variable not in scope

#inst: Declaration inside if-statement but access inside else.
if (true) {
    i1: int = 0;
}
else {
    i1 = 2;
}

#inst: Access i1 declared inside previous if statement block.
if (true) {
    i1 = 2;
}
else {
}

#inst: Access before declaration (inside if-statement).
if (true) {
    if (true) {
        i2 = 2;
    }
    else {
        i2 = 2;
    }

    i2: int = 0;

    if (true) {
        i2 = 2;
    }
}
else {
}

#inst: Declare in a single statement then-branch, access in else-branch, no {}.
if (false)
  i3 := 1;
else
  i3 = 5;

###############################################################################
#!/bin/env szl
#szl_options

#desc: return an expression from if-else body.

if (true) {
    return 10;
}
else {
}

if (true) {
}
else {
    return "abc";
}

if (true) {
    return 10.23;
}
else {
    return "abc";
}


###############################################################################
#!/bin/env szl
#szl_options

#desc: Expressions other than BoolExpression in "if (BoolExpression) ..."

#inst: No expression
if () {
}

#inst: integer expression
if (10+9%10) {
}

#inst: float expression
if (10.23*5.6) {
}

#inst: call of the function which returns nothing.
f: function() {
    DEBUG("print", "Failed, f called\n");
};

if (f()) {
}
