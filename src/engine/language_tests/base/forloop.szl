# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

# various tests for for loop

counter: int = 0;

move_next: function(i: int) {
  counter = counter + i;
};

init_counter: function(n: int): int {
  counter = n;
  return n;
};

expect: array of string = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" };
for (c: int = 1; c < 10; c++) {
  assert(string(c) == expect[c]);
}

# test that the before & after clauses are correctly printed
expect_int: array of int = { -2, 0, 2, 4, 6, 8 };
expected_index: int = 0;
for (i: int = init_counter(-2); counter < 10; move_next(2)) {
  assert(counter == expect_int[expected_index]);
  expected_index++;
}

# implicit type declarations are nice
s := 0;
for (i := 1; i <= 10; i++)
  s = s + i;
assert(s == 55);

t := 0;
str := "abcdefghij";
for (i := len(str); i > 0; i--)
  t = t + str[i-1];
assert(t == 45 + len(str) * 'a');
