s: string = "string";
b: bytes = convert(bytes, "bytes");
i: int = 17;
f: float = 2.3;
t: time = convert(time, "Thu Oct  9 00:44:37 PDT 2003");
p: fingerprint = convert(fingerprint, "0x12345");
assert(convert(string, b) == "bytes");
assert(convert(string, i) == "17");
assert(convert(string, f) == "2.3");
assert(convert(string, t) == "Thu Oct  9 00:44:37 PDT 2003");
assert(convert(string, p) == "0x0000000000012345p");
ai: array of int = {1, 2, 3, -4};
assert(convert(string, ai) == "{ 1, 2, 3, -4 }");
af: array of float = {0.1, 0.2, 0.3, -0.4};
assert(convert(string, af) == "{ 0.1, 0.2, 0.3, -0.4 }");
as: array of string = {"one", "two", "three", "four", "hello \"\x1b"};
assert(convert(string, as) == "{ \"one\", \"two\", \"three\", \"four\", \"hello \\\"\\x1b\" }");
at: array of time = {t, addyear(t, 1), addyear(t, 2)};
assert(convert(string, at) == "{ \"Thu Oct  9 00:44:37 PDT 2003\", \"Sat Oct  9 00:44:37 PDT 2004\", \"Sun Oct  9 00:44:37 PDT 2005\" }");
ap: array of fingerprint = {convert(fingerprint, 1), convert(fingerprint, 2), convert(fingerprint, 3)};
assert(convert(string, ap) == "{ 0x0000000000000001P, 0x0000000000000002P, 0x0000000000000003P }");
ab: array of bytes = {convert(bytes, "abc"), convert(bytes, "\x1\x2\x3")};
assert(convert(string, ab) == "{ B\"abc\", X\"010203\" }");
msi: map [string] of int = {"one": 1, "two": 2, "three": 3};
assert(convert(string, msi) == "{ \"one\": 1, \"two\": 2, \"three\": 3 }");
msf: map [string] of float = {"one": 1.0, "two": 2.0, "three": 3.0};
assert(convert(string, msf) == "{ \"one\": 1.0, \"two\": 2.0, \"three\": 3.0 }");
mss: map [string] of string = {"one": "1", "two": "2", "three": "3"};
assert(convert(string, mss) == "{ \"one\": \"1\", \"two\": \"2\", \"three\": \"3\" }");
msb: map [string] of bytes = {"one": convert(bytes, "1"), "two": convert(bytes, "2"), "three": convert(bytes, "3")};
assert(convert(string, msb) == "{ \"one\": B\"1\", \"two\": B\"2\", \"three\": B\"3\" }");
mst: map [string] of time = {"one": t, "two": t, "three": t};
assert(convert(string, mst) == "{ \"one\": \"Thu Oct  9 00:44:37 PDT 2003\", \"two\": \"Thu Oct  9 00:44:37 PDT 2003\", \"three\": \"Thu Oct  9 00:44:37 PDT 2003\" }");
msp: map [string] of fingerprint = {"one": p, "two": p, "three": p};
assert(convert(string, msp) == "{ \"one\": 0x0000000000012345P, \"two\": 0x0000000000012345P, \"three\": 0x0000000000012345P }");
mii: map [int] of int = {1: 11, 2: 22, 3: 33};
assert(convert(string, mii) == "{ 1: 11, 2: 22, 3: 33 }");
mfi: map [float] of int = {1.0: 11, 2.0: 22, 3.0: 33};
assert(convert(string, mfi) == "{ 1.0: 11, 2.0: 22, 3.0: 33 }");
mti: map [time] of int = {t: 11, addyear(t, 1): 22, addyear(t, 2): 33};
assert(convert(string, mti) == "{ \"Thu Oct  9 00:44:37 PDT 2003\": 11, \"Sat Oct  9 00:44:37 PDT 2004\": 22, \"Sun Oct  9 00:44:37 PDT 2005\": 33 }");
mpi: map [fingerprint] of int = {0x0000000000000001P: 11, 0x0000000000000002P: 22, 0x0000000000000003P: 33};
assert(convert(string, mpi) == "{ 0x0000000000000001P: 11, 0x0000000000000002P: 22, 0x0000000000000003P: 33 }");
mbi: map [bytes] of int = {convert(bytes, "1"): 11, convert(bytes, "2"): 22, convert(bytes, "3"): 33};
assert(convert(string, mbi) == "{ B\"1\": 11, B\"2\": 22, B\"3\": 33 }");
type T = {int, string, float, bytes, fingerprint, time, array of int};
t1: T = {i, s, f, b, p, t, ai};
assert(convert(string, t1) == "{ 17, \"string\", 2.3, B\"bytes\", 0x0000000000012345P, \"Thu Oct  9 00:44:37 PDT 2003\", { 1, 2, 3, -4 } }");
t2: {int, T, string} = {i, t1, s};
assert(convert(string, t2) == "{ 17, { 17, \"string\", 2.3, B\"bytes\", 0x0000000000012345P, \"Thu Oct  9 00:44:37 PDT 2003\", { 1, 2, 3, -4 } }, \"string\" }");
maa: map [array of int] of array of int = {ai: ai};
assert(convert(string, maa) == "{ { 1, 2, 3, -4 }: { 1, 2, 3, -4 } }");
mtt: map [T] of T = {t1: t1};
assert(convert(string, mtt) == "{ { 17, \"string\", 2.3, B\"bytes\", 0x0000000000012345P, \"Thu Oct  9 00:44:37 PDT 2003\", { 1, 2, 3, -4 } }: { 17, \"string\", 2.3, B\"bytes\", 0x0000000000012345P, \"Thu Oct  9 00:44:37 PDT 2003\", { 1, 2, 3, -4 } } }");
t3: {map [string] of int, int} = {msi, 4};
assert(convert(string, t3) == "{ { \"one\": 1, \"two\": 2, \"three\": 3 }, 4 }");
am: array of map [string] of int = {msi, msi};
assert(convert(string, am) == "{ { \"one\": 1, \"two\": 2, \"three\": 3 }, { \"one\": 1, \"two\": 2, \"three\": 3 } }");
aT: array of T = {t1, t1};
assert(convert(string, aT) == "{ { 17, \"string\", 2.3, B\"bytes\", 0x0000000000012345P, \"Thu Oct  9 00:44:37 PDT 2003\", { 1, 2, 3, -4 } }, { 17, \"string\", 2.3, B\"bytes\", 0x0000000000012345P, \"Thu Oct  9 00:44:37 PDT 2003\", { 1, 2, 3, -4 } } }");
a: bytes = convert(bytes, "üýþ", "latin-1");
l: string = convert(string, a, "latin-1");
assert(convert(string, a, "array-literal") == "X\"FCFDFE\"");
assert(l == "üýþ");
assert(convert(string, a, "hex") == "fcfdfe");
assert(convert(string, convert(bytes, convert(string, a, "hex"), "hex"), "hex") == "fcfdfe");
assert(a == convert(bytes, "fcfdfe", "hex"));
assert(l == convert(string, convert(bytes, "fcfdfe", "hex"), "latin-1"));
b1: bytes = {208};
s1: string = convert(string, b1, "latin-1");
assert(s1 == "Ð");
assert(len(s1) == 1);
b2: bytes = convert(bytes, s1, "latin-1");
assert(b2 == b1);
assert(convert(bytes, "üýþ", "latin-1") == convert(bytes, "üýþ", "LaTiN-1"));
