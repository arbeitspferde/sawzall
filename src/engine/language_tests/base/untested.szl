# Copyright 2010 Google Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

# Some instructions that were marked "Untested" until quite
# late are tested by these examples.


# fstoreT

type T = { a: int, b: string };

t: { c: int, d: string, e: T } = { 0, "hello", { 1, "one" } };

assert(string(t) == `{ 0, "hello", { 1, "one" } }`);
t.e = { 2, "two" };
assert(string(t) == `{ 0, "hello", { 2, "two" } }`);

# fstoreM
type T1 = map[int] of string;

t1: { c: int, d: string, e: T1 } = { 0, "hello", { 1: "one" } };

assert(string(t1) == `{ 0, "hello", { 1: "one" } }`);
t1.e = { 2: "two" };
assert(string(t1) == `{ 0, "hello", { 2: "two" } }`);

# retU

f: function(): bytes {
  return load("/asdfasdf/asdfsadf");
};

assert(!def(f()));

# xloadMu

a: array of map[int] of int = { { 1:1 }, { 2:2 } };
b: array of map[int] of int = a;
a[1][3] = 3;
assert(string(a) == `{ { 1: 1 }, { 2: 2, 3: 3 } }`);;
assert(string(b) == `{ { 1: 1 }, { 2: 2 } }`);
