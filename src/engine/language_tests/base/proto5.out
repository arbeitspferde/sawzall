type T = parsedmessage {x: bytes @ 1 : string, y: int @ 2 : int32, z: int @ 3 : int32};
b1: bytes = X"0A03616263108182";
c1: T = convert(T, b1);
assert(convert(string, c1.x) == "abc");
assert(c1.y == 0);
assert(c1.z == 0);
assert(inproto(c1.x));
assert(!inproto(c1.y));
assert(!inproto(c1.z));
b2: bytes = X"0A03616263110000000000C05E";
c2: T = convert(T, b2);
assert(convert(string, c2.x) == "abc");
assert(c2.y == 0);
assert(c2.z == 0);
assert(inproto(c2.x));
assert(!inproto(c2.y));
assert(!inproto(c2.z));
b3: bytes = X"0A03616263100518011003";
c3: T = convert(T, b3);
assert(convert(string, c3.x) == "abc");
assert(c3.y == 5);
assert(c3.z == 1);
assert(inproto(c3.x));
assert(inproto(c3.y));
assert(inproto(c3.z));
emit _undef_cnt <- 1;
emit _undef_details["base/proto5.szl:29: assert(string(c1.x) == \"abc\") (probably because \"c1\" was undefined due to an error at base/proto5.szl:28: T(b1) (field for tag: 2 (proto type id = 0) could not be skipped; corrupt data?))"] <- 1;
